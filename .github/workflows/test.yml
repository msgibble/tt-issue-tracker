name: Test automation
on:
  issue_comment:
    types: [created]
jobs:
  run:
    runs-on: ubuntu-latest
    permissions: write-all
    if: ${{ startsWith(github.event.comment.body, '/test') }}
    steps:
      - name: update assignee
        if: ${{ !contains(github.event.issue.assignees.*.login, github.event.comment.user.login) }}
        run: |
          echo "::error ${{ github.event.issue.assignees.*.login }}"
          echo "${{ github.event.comment.user.login }}
          exit 1
      - name: set repo name
        run: |
          x=`echo "${{ github.event.comment.body }}" | head -1`
          y=`echo $x | sed -E 's/^\/test[[:space:]]*(.*)$/\1/g' | tr -d '\r' | awk '{$1=$1};1'`
          z=($y)
          a=`echo "${z[0]:-$DEFAULT_REPO}" | sed -E "s/^($DEFAULT_OWNER\/)?(.*)$/$DEFAULT_OWNER\/\2/g"`
          echo "REPO_NAME=$a" >> $GITHUB_ENV
          echo "Repository name set to $a"
        env:
          DEFAULT_OWNER: msgibble
          DEFAULT_REPO: ${{ github.event.repository.name }}
      - name: validate repo name
        run: |
          gh repo view "$REPO_NAME"
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: copy issue
        run: |
          new_issue_body="${{ github.event.issue.body }}"$'\n'
          new_issue_body+="> This issue was copied from [#${{ github.event.issue.number }}](${{ github.event.issue.html_url }}) by @${{ github.event.comment.user.login }}."

          gh issue create --title "${{ github.event.issue.title }}" --body "$new_issue_body" --label "`echo ${{ join(github.event.issue.labels.*.name, ',') }}`" --milestone "${{ github.event.issue.milestone.title }}" --repo "$REPO_NAME"
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          
