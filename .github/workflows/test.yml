name: Test automation
on:
  issue_comment:
    types: [created]
jobs:
  run:
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      COMMENT_BODY: ${{ github.event.comment.body }}    
    steps:
      - name: update assignee
        if: ${{ startsWith(env.COMMENT_BODY, '/test') && !contains(github.event.issue.assignees.*.login, github.event.comment.user.login) }}
        run: |
          echo "Assigning to ${{ github.event.comment.user.login }}"
          gh issue edit ${{ github.event.issue.number }} --repo "${{ github.event.repository.full_name }}" --add-assignee "${{ github.event.comment.user.login }}"
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: set repo name
        if: ${{ startsWith(env.COMMENT_BODY, '/test') }}
        run: |
          x=`echo "$COMMENT_BODY" | head -1`
          y=`echo $x | sed -E 's/^\/test[[:space:]]*(.*)$/\1/g' | tr -d '\r' | awk '{$1=$1};1'`
          z=($y)
          a=`echo "${z[0]:-$DEFAULT_REPO}" | sed -E "s/^($DEFAULT_OWNER\/)?(.*)$/$DEFAULT_OWNER\/\2/g"`
          echo "REPO_NAME=$a" >> $GITHUB_ENV
          echo "Repository name set to $a"
        env:
          DEFAULT_OWNER: msgibble
          DEFAULT_REPO: ${{ github.event.repository.name }}
      - name: validate repo name
        if: ${{ startsWith(env.COMMENT_BODY, '/test') }}
        run: |
          gh repo view "$REPO_NAME"
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: determine labels
        if: ${{ startsWith(env.COMMENT_BODY, '/test') && env.REPO_NAME != env.DEFAULT_REPO }}
        run: |
          target_repo_labels=`gh label list --repo "$REPO_NAME" --json name --jq '.[].name'`
          issue_labels_json='${{ toJSON(github.event.issue.labels.*.name) }}'
          issue_labels=$(echo "$issue_labels_json" | jq -r '.[]')
          IFS=$'\n'; set -f
          new_issue_labels=($(comm -12 <(
           printf '%s\n' "${target_repo_labels[@]}" | sort) <(
           printf '%s\n' "${issue_labels[@]}" | sort)))

          echo "new issue labels: ${new_issue_labels[*]}"

          echo "LABELS=$new_issue_labels" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: copy issue
        if: ${{ startsWith(env.COMMENT_BODY, '/test') }}
        run: |
          new_issue_body="$ISSUE_BODY"$'\n'
          new_issue_body+="> This issue was copied from [#${{ github.event.issue.number }}](${{ github.event.issue.html_url }}) by @${{ github.event.comment.user.login }}."

          new_issue_labels=$( IFS=$','; echo "${LABELS[*]}"
          gh issue create --title "$ISSUE_TITLE" --body "$new_issue_body" --label "$new_issue_labels" --milestone "$MILESTONE_TITLE" --assignee "${{ github.event.comment.user.login }}" --repo "$REPO_NAME"
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          MILESTONE_TITLE: ${{ github.event.issue.milestone.title }}
          
